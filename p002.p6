=begin comment
    Project Euler
    Problem: 2
    Title: Even Fibonacci numbers
    Description:
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
=end comment

use v6;

my $one = 1;
my $two = 2;

my $sum = 0;

until $two >= 4000000 {
    if ( $two % 2==0 ) {
        $sum += $two;
    }
    my $next_one = $two;
    $two = $one + $two;
    $one = $next_one;
}
say "My Answer:\n" ~ $sum;


############################3
## Answers

# [author]
say "Gerhard R. answer:";
say [+] grep * %% 2, (1, 1, *+* ...^ * > 4_000_000);

# Eric Hodges
my $term = 1;
my $last_term = 0;
$sum = 0;

while ($term < 4000000) {
    ($last_term, $term) = ($term, $term + $last_term);
    $sum += $term unless $term % 2;
}
say "Eric Hodges answer:\n" ~ $sum;

# Mark Hershberger
class Fibonacci {
    has @!list = (0, 1);

    method next() {
        @!list[2] = [+] @!list;
        shift @!list;
        return @!list[1];
    }
}

my $fibber = Fibonacci.new;
my $f;

my @r = gather {
    $f = $fibber.next;
    while $f < 4000000 {
        take (0+$f) if $f % 2 == 0;
        $f = $fibber.next;
    }
}

say "Mark Hershberger answer:";
say [+] @r;

## code..
